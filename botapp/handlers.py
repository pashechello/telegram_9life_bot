import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from botapp.database import save_user, add_participant, add_referral
from botapp.models import BotUser, Participant, Referral
from botapp.utils import check_subscription, calculate_winners_count, choose_winner, participant_exists_async, get_referral_count_async, get_referral_code_async, get_referrals_async
from botapp.helpers import generate_referral_code
from asgiref.sync import sync_to_async
import asyncio

logger = logging.getLogger(__name__)

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
@sync_to_async
def save_user_async(user, referral_code_rel=None):
    try:
        save_user(user, referral_code_rel)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}", exc_info=True)

@sync_to_async
def add_participant_async(user_id, referral_code_rel):
    try:
        logger.debug(f"Adding participant async: user_id={user_id}, referral_code_rel={referral_code_rel}")
        add_participant(user_id, referral_code_rel)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞: {e}", exc_info=True)

@sync_to_async
def add_referral_async(referrer_code, referred_user_id):
    try:
        logger.debug(f"Adding referral async: referrer_code={referrer_code}, referred_user_id={referred_user_id}")
        referrer = BotUser.objects.get(referral_code_rel=referrer_code)
        referred_user = BotUser.objects.get(user_id=referred_user_id)
        logger.debug(f"Referrer found: {referrer.user_id}, Referred user found: {referred_user.user_id}")
        if not Referral.objects.filter(referrer=referrer, referred_user=referred_user).exists():
            Referral.objects.create(referrer=referrer, referred_user=referred_user)
            logger.debug(f"Referral created: referrer={referrer.user_id}, referred_user={referred_user.user_id}")
            referrer.referral_count += 1
            referrer.save()
            logger.debug(f"Referral count updated: referrer={referrer.user_id}, new count={referrer.referral_count}")
        else:
            logger.debug("Referral already exists")
    except BotUser.DoesNotExist:
        logger.error(f"Referrer or referred user does not exist: referrer_code={referrer_code}, referred_user_id={referred_user_id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {e}", exc_info=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        user = update.effective_user
        referral_code_rel = context.args[0] if context.args else None

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã /start
        menu_keyboard = [
            [KeyboardButton("–ú–æ–∏ —à–∞–Ω—Å—ã"), KeyboardButton("–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å")],
            [KeyboardButton("–ü—Ä–∏–∑—ã"), KeyboardButton("–í –º–∞–≥–∞–∑–∏–Ω")]
        ]
        menu_reply_markup = ReplyKeyboardMarkup(menu_keyboard, resize_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=menu_reply_markup)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—á–∞—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ
        is_participant = await participant_exists_async(user.id)

        if is_participant:
            message = "–°–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —á–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å? –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏—à–∞–º–∏ –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞."
            await update.message.reply_text(message)
            return

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—É—é –ª–æ–≥–∏–∫—É
        if not referral_code_rel:
            referral_code_rel = await get_referral_code_async(user.id)
            if not referral_code_rel:
                referral_code_rel = await sync_to_async(generate_referral_code)()
        await save_user_async(user, referral_code_rel)

        welcome_message = (
            "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üéâ\n\n"
            "–ü—Ä–∏–≤–µ—Ç, {}! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ.\n\n"
            "----------------------------------------\n"
            "–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ!\n"
            "----------------------------------------\n"
            "–•–æ—á–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ?"
        ).format(user.first_name)

        welcome_keyboard = [
            [InlineKeyboardButton("–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å", callback_data='join_giveaway')],
        ]
        welcome_reply_markup = InlineKeyboardMarkup(welcome_keyboard)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
        await update.message.reply_text(welcome_message, reply_markup=welcome_reply_markup)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ start: {e}", exc_info=True)

async def join_giveaway(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        query = update.callback_query
        await query.answer()

        user = update.effective_user
        referral_code_rel = await get_referral_code_async(user.id)
        if not referral_code_rel:
            referral_code_rel = await sync_to_async(generate_referral_code)()
        await save_user_async(user, referral_code_rel)

        message = "–ß—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ, –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª '9 –∂–∏–∑–Ω–µ–π'.\n\n"
        keyboard = [
            [InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='https://t.me/ztmvta')],
            [InlineKeyboardButton("–Ø —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω", callback_data='check_subscription')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.message.reply_text(message, reply_markup=reply_markup)

        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
        logger.debug("Checking subscription")
        if await check_subscription(user.id, "-1001601093943", context):
            logger.debug("User is subscribed, adding participant")
            await add_participant_async(user.id, referral_code_rel)
        else:
            logger.debug("User is not subscribed")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ join_giveaway: {e}", exc_info=True)

async def check_subscription_after_subscribe(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        query = update.callback_query
        await query.answer()

        user = update.effective_user
        referral_code_rel = await get_referral_code_async(user.id)
        if not referral_code_rel:
            referral_code_rel = await sync_to_async(generate_referral_code)()
        await save_user_async(user, referral_code_rel)
        chat_id = "-1001601093943"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞

        if await check_subscription(user.id, chat_id, context):
            await add_participant_async(user.id, referral_code_rel)
            await query.message.reply_text("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã —Ç–µ–ø–µ—Ä—å —É—á–∞—Å—Ç–Ω–∏–∫ —Ä–æ–∑—ã–≥—Ä—ã—à–∞!")
            referral_link = f"https://t.me/shop_9lifes_bot?start={referral_code_rel}"
            await query.message.reply_text(f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å —à–∞–Ω—Å—ã –Ω–∞ –≤—ã–∏–≥—Ä—ã—à, –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π! –í–æ—Ç –≤–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral_link}")
        else:
            await query.message.reply_text("–ü–æ—Ö–æ–∂–µ, –≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ check_subscription_after_subscribe: {e}", exc_info=True)

async def show_chances(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        user_id = update.message.from_user.id
        chat_id = "-1001601093943"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞

        is_subscribed = await check_subscription(user_id, chat_id, context)
        is_participant = await participant_exists_async(user_id)

        if not is_subscribed or not is_participant:
            message = "–ü–æ—Ö–æ–∂–µ, –≤—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ, —Å–∫–æ—Ä–µ–µ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø–æ–≤—ã—Å—å—Ç–µ —à–∞–Ω—Å—ã!"
            await update.message.reply_text(message)
            
            welcome_message = (
                "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üéâ\n\n"
                "–ü—Ä–∏–≤–µ—Ç, {}! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ.\n\n"
                "----------------------------------------\n"
                "–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ!\n"
                "----------------------------------------\n"
                "–•–æ—á–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ?"
            ).format(update.effective_user.first_name)

            welcome_keyboard = [
                [InlineKeyboardButton("–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å", callback_data='join_giveaway')],
            ]
            welcome_reply_markup = InlineKeyboardMarkup(welcome_keyboard)

            await update.message.reply_text(welcome_message, reply_markup=welcome_reply_markup)
        else:
            referral_count = await get_referral_count_async(user_id)
            chances = 1 + referral_count
            
            if referral_count == 0:
                message = "–£—Ä–∞, —É –í–∞—Å –µ—Å—Ç—å 1 —à–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å! –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–æ —à–∞–Ω—Å—É –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞!"
                referral_code_rel = await get_referral_code_async(user_id)
                referral_link = f"https://t.me/shop_9lifes_bot?start={referral_code_rel}"
                message += f"\n\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral_link}"
            else:
                message = f"–û–≥–æ, —É –í–∞—Å —Ü–µ–ª—ã—Ö {chances} —à–∞–Ω—Å–æ–≤, –∂–µ–ª–∞–µ–º —É–¥–∞—á–∏!"
            
            await update.message.reply_text(message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ show_chances: {e}", exc_info=True)

async def show_referral_link(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        user_id = update.message.from_user.id
        chat_id = "-1001601093943"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞

        is_subscribed = await check_subscription(user_id, chat_id, context)
        is_participant = await participant_exists_async(user_id)

        if not is_subscribed or not is_participant:
            message = "–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å, –í—ã —Å–∞–º–∏ –µ—â–µ –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ."
            await update.message.reply_text(message)
            
            welcome_message = (
                "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üéâ\n\n"
                "–ü—Ä–∏–≤–µ—Ç, {}! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ.\n\n"
                "----------------------------------------\n"
                "–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ!\n"
                "----------------------------------------\n"
                "–•–æ—á–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ?"
            ).format(update.effective_user.first_name)

            welcome_keyboard = [
                [InlineKeyboardButton("–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å", callback_data='join_giveaway')],
            ]
            welcome_reply_markup = InlineKeyboardMarkup(welcome_keyboard)

            await update.message.reply_text(welcome_message, reply_markup=welcome_reply_markup)
        else:
            referral_code_rel = await get_referral_code_async(user_id)
            referral_link = f"https://t.me/shop_9lifes_bot?start={referral_code_rel}"
            message = (
                f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral_link}\n\n"
                "–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞ 1 —à–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å –±–æ–ª—å—à–µ."
            )
            await update.message.reply_text(message)

            referral_count = await get_referral_count_async(user_id)
            referrals = await get_referrals_async(referral_code_rel)

            if referral_count > 0:
                referral_list = "\n".join([f"{referral.first_name} {referral.last_name} (@{referral.username})" for referral in referrals])
                message = f"–£ –≤–∞—Å {referral_count} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:\n{referral_list}"
            else:
                message = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤."

            await update.message.reply_text(message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ show_referral_link: {e}", exc_info=True)

async def buy_product(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        await update.message.reply_text("–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–∫—É–ø–∫–µ: http://t.me/shop_9lifes_bot/nevidimka")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ buy_product: {e}", exc_info=True)

async def show_prizes_count(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        winners_count = await sync_to_async(calculate_winners_count)()
        await update.message.reply_text(f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ –∫–æ–Ω—É {winners_count} Nevidimok!")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ show_prizes_count: {e}", exc_info=True)

async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        text = update.message.text
        button_handlers = {
            "–ú–æ–∏ —à–∞–Ω—Å—ã": show_chances,
            "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å": show_referral_link,
            "–ü—Ä–∏–∑—ã": show_prizes_count,
            "–í –º–∞–≥–∞–∑–∏–Ω": buy_product
        }
        handler = button_handlers.get(text)
        if handler:
            await handler(update, context)
        else:
            await update.message.reply_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ handle_button: {e}", exc_info=True)

async def notify_participants(context: ContextTypes.DEFAULT_TYPE):
    try:
        participants = await sync_to_async(list)(Participant.objects.all())
        winners_count = await sync_to_async(calculate_winners_count)()

        for participant in participants:
            user_id = participant.user.user_id
            referral_count = await get_referral_count_async(user_id)
            chances = 1 + referral_count
            referral_code_rel = await get_referral_code_async(user_id)
            referral_link = f"https://t.me/shop_9lifes_bot?start={referral_code_rel}"
            message = (
                f"–î–æ –∫–æ–Ω—Ü–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –æ—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ 2 –Ω–µ–¥–µ–ª–∏, –∞ –Ω–∞ –∫–æ–Ω—É —É–∂–µ —Ü–µ–ª—ã—Ö {winners_count} NEVIDIMOK!\n"
                f"–ù–∞–ø–æ–º–∏–Ω–∞—é, —á—Ç–æ –í–∞—à–∏ —à–∞–Ω—Å—ã –Ω–∞ –≤—ã–∏–≥—Ä—ã—à —Ä–∞–≤–Ω—ã = {chances}.\n"
                "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å —à–∞–Ω—Å—ã, –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π!\n"
                f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral_link}"
            )
            await context.bot.send_message(chat_id=user_id, text=message)
            await asyncio.sleep(1)  # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ notify_participants: {e}", exc_info=True)

async def notify_winners(context: ContextTypes.DEFAULT_TYPE):
    try:
        participants = await sync_to_async(list)(Participant.objects.all())
        winners = await choose_winner(context)

        for winner in winners:
            user_id = winner.user_id
            message = "–£—Ö, —Ç—ã! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ NEVIDIMKY, –Ω–∞–ø–∏—à–∏—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É @Antidronodeyalo, —á—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –ø—Ä–∏–∑!"
            await context.bot.send_message(chat_id=user_id, text=message)

        winners_list = "\n".join([str(winner.user_id) for winner in winners])
        for participant in participants:
            user_id = participant.user.user_id
            message = (
                f"–°–ø–∏—Å–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π:\n{winners_list}\n\n"
                "–í —ç—Ç–æ—Ç —Ä–∞–∑ –Ω–µ –ø–æ–≤–µ–∑–ª–æ, –Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π! –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à 9 –ñ–∏–∑–Ω–µ–π"
            )
            await context.bot.send_message(chat_id=user_id, text=message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ notify_winners: {e}", exc_info=True)

async def handle_referral(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        user = update.effective_user
        referral_code_rel = context.args[0] if context.args else None

        logger.debug(f"Handling referral for user: {user.id}, referral_code_rel: {referral_code_rel}")

        if referral_code_rel:
            referrer = await sync_to_async(BotUser.objects.filter(referral_code_rel=referral_code_rel).first)()
            if referrer:
                chat_id = "-1001601093943"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
                is_subscribed = await check_subscription(user.id, chat_id, context)
                is_participant = await participant_exists_async(user.id)
                is_already_referral = await sync_to_async(Referral.objects.filter(referred_user_id=user.id).exists)()

                logger.debug(f"User {user.id} subscription status: {is_subscribed}")
                logger.debug(f"User {user.id} participant status: {is_participant}")
                logger.debug(f"User {user.id} already referral status: {is_already_referral}")

                if is_subscribed and is_participant and not is_already_referral:
                    await add_referral_async(referral_code_rel, user.id)
                    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! –í–∞—à –¥—Ä—É–≥ –ø–æ–ª—É—á–∏–ª –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —à–∞–Ω—Å.")
                    referred_user = await sync_to_async(BotUser.objects.get)(user_id=user.id)
                    referred_user_name = f"{referred_user.first_name} {referred_user.last_name} (@{referred_user.username})"
                    message = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª {referred_user_name} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è, –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø—Ä–∏–Ω—è–ª —É—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ."
                    await context.bot.send_message(chat_id=referrer.user_id, text=message)
                elif is_already_referral:
                    await update.message.reply_text("–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º.")
                else:
                    await update.message.reply_text("–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∫–æ–Ω–∫—É—Ä—Å–µ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —à–∞–Ω—Å–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø—Ä–∏–º–∏—Ç–µ —É—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ.")
            else:
                await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥.")
        else:
            await start(update, context)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ö—ç–Ω–¥–ª–µ—Ä–µ handle_referral: {e}", exc_info=True)